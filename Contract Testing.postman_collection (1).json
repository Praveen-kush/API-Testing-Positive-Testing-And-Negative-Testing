{
	"info": {
		"_postman_id": "968111fb-dec5-4f1e-8d95-2d64ebb59398",
		"name": "Contract Testing",
		"description": "# About this collection\n\nThis collection helps you set up contract tests to ensure that two separate systems are compatible and can communicate with one another.\n\n## **Using the collection**\n\n**Step 1:** Send the sample requests and view the response and test results.\n\n**Step 2:** Replace the sample request URLs with your desired API endpoints.\n\n**Step 3:** Customize the tests in the \"Tests\" tab if needed. Don't forget to save your changes.\n\n### Resources\n\n[Scripting in Postman](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)\n\n[Test script examples](https://learning.postman.com/docs/writing-scripts/script-references/test-examples/)\n\n[Postman Sandbox API reference](https://learning.postman.com/docs/sending-requests/grpc/postman-sandbox-api/#writing-assertions)\n\n[Using the Collection Runner](https://learning.postman.com/docs/collections/running-collections/intro-to-collection-runs/)\n\n[  \n](https://postman.postman.co/documentation/24552533-5bead607-0197-4e1d-87d4-3160bc7631c1?entity=&branch=&version=)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29692688",
		"_collection_link": "https://www.postman.com/spaceflight-geoscientist-70361809/api-testing/collection/dmc2n0k/contract-testing?action=share&source=collection_link&creator=29692688"
	},
	"item": [
		{
			"name": "require",
			"item": [
				{
					"name": "List_User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/users?page=2",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Single_User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/users/2",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single_User_Not_Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/users/23",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users",
								"23"
							]
						}
					},
					"response": []
				},
				{
					"name": "List<resource>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/unknown",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"unknown"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single<resource>",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/unknown/2",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"unknown",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Single <resource> not found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/unknown/23",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"unknown",
								"23"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_URL}}api/users",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_URL}}api/users/2",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_URL}}api/users/2",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/users/2",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users",
								"2"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register - successful",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_URL}}api/register",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Register - unsuccessful",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_URL}}api/register",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delayed response",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/users?delay=3",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "delay",
									"value": "3"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New mock server",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"12345\",\r\n    \"message\": \"User created successfully\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "New mock server",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"id\": \"12345\",\r\n    \"message\": \"User created successfully\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Mon, 07 Apr 2025 11:05:34 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "91"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cf-Ray",
									"value": "92c90cf4f8a05a69-IAD"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1744023934&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=9gz1SOf7RR4VahQm9TTAG4YzdkXUvkFmRXtISDgiu6s%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1744023934&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=9gz1SOf7RR4VahQm9TTAG4YzdkXUvkFmRXtISDgiu6s%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Etag",
									"value": "W/\"5b-aebTXJmUMpfmeSbdUNgGLZePSkM\""
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								},
								{
									"key": "Cf-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "server-timing",
									"value": "cfL4;desc=\"?proto=TCP&rtt=2022&min_rtt=1960&rtt_var=600&sent=4&recv=6&lost=0&retrans=0&sent_bytes=2823&recv_bytes=824&delivery_rate=1463365&cwnd=246&unsent_bytes=0&cid=b5bea623313ab19a&ts=171&x=0\""
								}
							],
							"cookie": [],
							"body": "{\n    \"id\": \"12345\",\n    \"message\": \"User created successfully\",\n    \"createdAt\": \"2025-04-07T11:05:34.359Z\"\n}"
						}
					]
				},
				{
					"name": "server_url",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"{{name}}\",\r\n    \"email\": \"{{email}}\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://abc6ba7a-26a6-4ad1-b6f0-db64ba32117a.mock.pstmn.io/create",
							"protocol": "https",
							"host": [
								"abc6ba7a-26a6-4ad1-b6f0-db64ba32117a",
								"mock",
								"pstmn",
								"io"
							],
							"path": [
								"create"
							]
						}
					},
					"response": []
				},
				{
					"name": "email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"let randomNum = Math.floor(Math.random() * 100000);\r",
									"let email = `user${randomNum}@example.com`;\r",
									"\r",
									"pm.environment.set(\"praveenkushwaha@gmail.com\", email);\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{randomEmail}}\",\r\n  \"password\": \"password123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"response": [
						{
							"name": "New Request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{randomEmail}}\",\r\n  \"password\": \"password123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 10 Apr 2025 11:06:55 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "102"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cf-Ray",
									"value": "92e1c70eafaa07b9-IAD"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1744283215&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kCcUcNhjvZYGeL0nqEeWSkvIImX0%2BBeyUMR4fI8ZgY0%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1744283215&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kCcUcNhjvZYGeL0nqEeWSkvIImX0%2BBeyUMR4fI8ZgY0%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Etag",
									"value": "W/\"66-1v4ukzrVfEXmLpptdAAOeWvOCOg\""
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								},
								{
									"key": "Cf-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "server-timing",
									"value": "cfL4;desc=\"?proto=TCP&rtt=2173&min_rtt=1979&rtt_var=881&sent=4&recv=5&lost=0&retrans=0&sent_bytes=2821&recv_bytes=822&delivery_rate=1463365&cwnd=245&unsent_bytes=0&cid=61efc75d2de6537e&ts=190&x=0\""
								}
							],
							"cookie": [],
							"body": "{\n    \"email\": \"{{randomEmail}}\",\n    \"password\": \"password123\",\n    \"id\": \"529\",\n    \"createdAt\": \"2025-04-10T11:06:55.293Z\"\n}"
						},
						{
							"name": "email",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"{{randomEmail}}\",\r\n  \"password\": \"password123\"\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://reqres.in/api/users",
									"protocol": "https",
									"host": [
										"reqres",
										"in"
									],
									"path": [
										"api",
										"users"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Date",
									"value": "Thu, 10 Apr 2025 11:26:19 GMT"
								},
								{
									"key": "Content-Type",
									"value": "application/json; charset=utf-8"
								},
								{
									"key": "Content-Length",
									"value": "108"
								},
								{
									"key": "Connection",
									"value": "keep-alive"
								},
								{
									"key": "Cf-Ray",
									"value": "92e1e3791e1bc9a5-IAD"
								},
								{
									"key": "Server",
									"value": "cloudflare"
								},
								{
									"key": "Report-To",
									"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1744284379&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=SmpnljtdvNq0kwbThYpKim2OhRTp4GYFdnfSMdMcQG8%3D\"}]}"
								},
								{
									"key": "Reporting-Endpoints",
									"value": "heroku-nel=https://nel.heroku.com/reports?ts=1744284379&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=SmpnljtdvNq0kwbThYpKim2OhRTp4GYFdnfSMdMcQG8%3D"
								},
								{
									"key": "Nel",
									"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
								},
								{
									"key": "X-Powered-By",
									"value": "Express"
								},
								{
									"key": "Access-Control-Allow-Origin",
									"value": "*"
								},
								{
									"key": "Etag",
									"value": "W/\"6c-O6TQ8I9Qqn4F5Ysr05BuEQvokhY\""
								},
								{
									"key": "Via",
									"value": "1.1 vegur"
								},
								{
									"key": "Cf-Cache-Status",
									"value": "DYNAMIC"
								},
								{
									"key": "server-timing",
									"value": "cfL4;desc=\"?proto=TCP&rtt=2128&min_rtt=1975&rtt_var=850&sent=4&recv=5&lost=0&retrans=0&sent_bytes=2821&recv_bytes=828&delivery_rate=1466329&cwnd=250&unsent_bytes=0&cid=a1b436b99baa5764&ts=176&x=0\""
								}
							],
							"cookie": [],
							"body": "{\n    \"email\": \"user88420@example.com\",\n    \"password\": \"password123\",\n    \"id\": \"781\",\n    \"createdAt\": \"2025-04-10T11:26:19.189Z\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "Negative_API_Testing",
			"item": [
				{
					"name": "Negative_List_User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/users?page==001234346",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "=001234346"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Negative_Single_User",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_URL}}api/users/20",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users",
								"20"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Assertion",
			"item": [
				{
					"name": "del",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Content-Type is present\", function () {\r",
									"    pm.response.to.have.header(\"Content-Type\");\r",
									"});\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"pm.test(\"Response time is less than 2000ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(2000);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_URL}}api/users",
							"host": [
								"{{base_URL}}api"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Test Response",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"// Validate that the response is json object",
							"pm.test(\"Response is a json object\", function () {",
							"    pm.expect(pm.response.json()).to.be.an('object');",
							"});",
							"",
							"// Validate that the response has an arg object",
							"pm.test(\"Response to have 'arg' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('args');",
							"});",
							"",
							"// Validate that the response has headers object",
							"pm.test(\"Response to have 'headers' object\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('headers');",
							"});",
							"",
							"// Validate that the response has url property",
							"pm.test(\"Response to have 'url' property\", function () {",
							"    pm.expect(pm.response.json()).to.have.property('url');",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://postman-echo.com/get?foo1=bar1&foo2=bar2",
					"protocol": "https",
					"host": [
						"postman-echo",
						"com"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "foo1",
							"value": "bar1"
						},
						{
							"key": "foo2",
							"value": "bar2"
						}
					]
				},
				"description": "The tests in this request validate that:\n\n- the response code is 200\n- the response is a JSON object\n- the response has an 'arg' object\n- the response has 'headers' object\n- the response has a 'URL' property"
			},
			"response": []
		},
		{
			"name": "Check for Valid Query Params",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// Validate that the response code should be 200\r",
							"pm.test(\"Response Code should be 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Run validations on response headers like Content-Type\r",
							"pm.test(\"Content-Type should be JSON\", function () {\r",
							"    pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"const json = pm.response.json();\r",
							"\r",
							"// The response body, including individual attributes can be evaluated for correctness\r",
							"pm.test(\"`args` should contain the correct query params\", function () {\r",
							"    pm.expect(json.args).to.be.an('object');\r",
							"    pm.expect(json.args.foo).to.eql('bar');\r",
							"    pm.expect(json.args.baz).to.eql('value');\r",
							"});\r",
							"\r",
							"// Non-trivial data types like Dates can also be tested against\r",
							"pm.test(\"Date in the header should be valid\", function () {\r",
							"    const parsedDate = new Date(pm.response.headers.get('Date'));\r",
							"    pm.expect(parsedDate).to.be.a('date');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/get?foo=bar&baz=value",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "foo",
							"value": "bar"
						},
						{
							"key": "baz",
							"value": "value"
						}
					]
				},
				"description": "The tests in the request validate the response code and the data returned in the response is the same as the one being sent."
			},
			"response": []
		},
		{
			"name": "Check for Valid Form Data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const json = pm.response.json();\r",
							"\r",
							"// Validate raw body sent in the request, be it form-data or JSON\r",
							"pm.test(\"`form` should contain the correct form data\", function () {\r",
							"    pm.expect(json.form).to.be.an('object');\r",
							"    pm.expect(json.form.foo1).to.eql('bar1');\r",
							"    pm.expect(json.form.foo2).to.eql('bar2');\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "foo1",
							"value": "bar1",
							"type": "text"
						},
						{
							"key": "foo2",
							"value": "bar2",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "{{baseUrl}}/post",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"post"
					]
				},
				"description": "The tests in this request validate that the request body sent as form-data is valid."
			},
			"response": []
		},
		{
			"name": "Token_Generator",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=pm.response.json();\r",
							"pm.environment.set(\"b_token\", jsonData.token);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "basic"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\" : \"admin\",\r\n    \"password\" : \"password123\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/auth",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Booking",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/{{b_id}}",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"{{b_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "id",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/16",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"16"
					]
				}
			},
			"response": []
		},
		{
			"name": "id:620",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/620",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"620"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateBooking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData=pm.response.json();\r",
							"pm.environment.set(\"b_id\", jsonData.bookingid);\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"\tpm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"\tpm.expect(pm.response.responseTime).to.be.below(10000);\r",
							"});\r",
							"\r",
							"pm.test(\"Body matches string\", function () {\r",
							"\tpm.expect(pm.response.text()).to.include(\"bookingid\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"{{fname}}\",\r\n    \"lastname\" : \"{{lname}}\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateBooking",
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "",
							"type": "string"
						}
					]
				},
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"James\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 111,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/1",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid_API_Testing",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking/000",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking",
						"000"
					]
				}
			},
			"response": []
		},
		{
			"name": "ping",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://restful-booker.herokuapp.com/ping",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"ping"
					]
				}
			},
			"response": []
		},
		{
			"name": "invalid_Bad_request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"firstname\" : \"Jim\",\r\n    \"lastname\" : \"Brown\",\r\n    \"totalprice\" : 11_1,\r\n    \"depositpaid\" : true,\r\n    \"bookingdates\" : {\r\n        \"checkin\" : \"2018-01-01\",\r\n        \"checkout\" : \"2019-01-01\"\r\n    },\r\n    \"additionalneeds\" : \"Breakfast\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://restful-booker.herokuapp.com/booking",
					"protocol": "https",
					"host": [
						"restful-booker",
						"herokuapp",
						"com"
					],
					"path": [
						"booking"
					]
				}
			},
			"response": []
		},
		{
			"name": "creating_booking",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		},
		{
			"name": "email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let randomNum = Math.floor(Math.random() * 100000);\r",
							"let email = `user${randomNum}@example.com`;\r",
							"\r",
							"pm.environment.set(\"praveenkushwaha@gmail.com\", email);\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"email\": \"{{randomEmail}}\",\r\n  \"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://reqres.in/api/users",
					"protocol": "https",
					"host": [
						"reqres",
						"in"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": [
				{
					"name": "New Request",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"{{randomEmail}}\",\r\n  \"password\": \"password123\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Date",
							"value": "Thu, 10 Apr 2025 11:06:55 GMT"
						},
						{
							"key": "Content-Type",
							"value": "application/json; charset=utf-8"
						},
						{
							"key": "Content-Length",
							"value": "102"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						},
						{
							"key": "Cf-Ray",
							"value": "92e1c70eafaa07b9-IAD"
						},
						{
							"key": "Server",
							"value": "cloudflare"
						},
						{
							"key": "Report-To",
							"value": "{\"group\":\"heroku-nel\",\"max_age\":3600,\"endpoints\":[{\"url\":\"https://nel.heroku.com/reports?ts=1744283215&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kCcUcNhjvZYGeL0nqEeWSkvIImX0%2BBeyUMR4fI8ZgY0%3D\"}]}"
						},
						{
							"key": "Reporting-Endpoints",
							"value": "heroku-nel=https://nel.heroku.com/reports?ts=1744283215&sid=c4c9725f-1ab0-44d8-820f-430df2718e11&s=kCcUcNhjvZYGeL0nqEeWSkvIImX0%2BBeyUMR4fI8ZgY0%3D"
						},
						{
							"key": "Nel",
							"value": "{\"report_to\":\"heroku-nel\",\"max_age\":3600,\"success_fraction\":0.005,\"failure_fraction\":0.05,\"response_headers\":[\"Via\"]}"
						},
						{
							"key": "X-Powered-By",
							"value": "Express"
						},
						{
							"key": "Access-Control-Allow-Origin",
							"value": "*"
						},
						{
							"key": "Etag",
							"value": "W/\"66-1v4ukzrVfEXmLpptdAAOeWvOCOg\""
						},
						{
							"key": "Via",
							"value": "1.1 vegur"
						},
						{
							"key": "Cf-Cache-Status",
							"value": "DYNAMIC"
						},
						{
							"key": "server-timing",
							"value": "cfL4;desc=\"?proto=TCP&rtt=2173&min_rtt=1979&rtt_var=881&sent=4&recv=5&lost=0&retrans=0&sent_bytes=2821&recv_bytes=822&delivery_rate=1463365&cwnd=245&unsent_bytes=0&cid=61efc75d2de6537e&ts=190&x=0\""
						}
					],
					"cookie": [],
					"body": "{\n    \"email\": \"{{randomEmail}}\",\n    \"password\": \"password123\",\n    \"id\": \"529\",\n    \"createdAt\": \"2025-04-10T11:06:55.293Z\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "key",
			"value": "f4c9f79c31c05853a6c2d45fd2253b16"
		},
		{
			"key": "token",
			"value": "ATTAf37bccf97e919e93ff46529f9ff66cad5ef459d8a11915bb49b5fbe2430123c6BA2461FA",
			"type": "string"
		},
		{
			"key": "secret",
			"value": "c3d4db9a69c7938823f158ef1baaa2f6df4808e2f3196d7e0fb5d51c6953cf21",
			"type": "string"
		}
	]
}